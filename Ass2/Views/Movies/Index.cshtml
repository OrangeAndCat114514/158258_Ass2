@*model IEnumerable<Ass2.Models.Movie>*@
@model Ass2.ViewModels.MovieIndexViewModel
@using PagedList.Mvc




<h2>Index</h2>

<p>
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You search for " + Model.Search + " found")
    @Model.Movies.TotalItemCount Movies
</p>
<p>

    @using (Html.BeginForm("Index", "Movies", FormMethod.Get))
    {
        <label>Filter by Moviecategory:</label>
        @Html.DropDownListFor(vm => vm.MovieCategory, Model.CatFilterItems, "All");


        <input type="Submit" value="Filter" />
        <input type="hidden" name="Search" id="Search" value="@Model.Search" />
    }
</p>
<table class="table">
    <tr>
        <th>
            Image
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MovieCategory)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Movies.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Movies.First().Score)

        </th>


        <th></th>
    </tr>

    @foreach (var item in Model.Movies)
    {
        <tr>
            <td>
                @Html.Raw("<img src='" + Url.Content(item.URL) + "' alt='Image' width='150'/>")

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MovieCategory.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Score)
            </td>


        </tr>
    }

</table>
<div class="pagination">
    Page @(Model.Movies.PageCount < Model.Movies.PageNumber ? 0 : Model.Movies.PageNumber) of @Model.Movies.PageCount
</div>

<div class="pagination-links">
    @Html.PagedListPager(Model.Movies, page => Url.Action("Index", new { category = Model.MovieCategory, Search = Model.Search, sortBy = @Model.SortBy, page }))

</div>



